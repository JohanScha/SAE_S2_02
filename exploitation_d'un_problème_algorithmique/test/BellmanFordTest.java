import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import java.util.List;

public class BellmanFordTest {

    @Test
    public void testPointFixe() {
        GrapheListe graphe = new GrapheListe();

        // Construction du graphe (mêmes arcs que dans ton exemple)
        graphe.ajouterArc("A", "B", 12);
        graphe.ajouterArc("A", "D", 87);
        graphe.ajouterArc("B", "E", 11);
        graphe.ajouterArc("C", "A", 19);
        graphe.ajouterArc("D", "C", 10);
        graphe.ajouterArc("D", "B", 23);
        graphe.ajouterArc("E", "D", 43);

        BellmanFord algo = new BellmanFord();
        Valeurs resultats = algo.resoudre(graphe, "A");

        // Vérification des distances (expected = distance attendue)
        assertEquals(0.0, resultats.getValeur("A"), 0.0001);
        assertEquals(12.0, resultats.getValeur("B"), 0.0001);
        assertEquals(66.0, resultats.getValeur("D"), 0.0001);
        assertEquals(76.0, resultats.getValeur("C"), 0.0001);
        assertEquals(23.0, resultats.getValeur("E"), 0.0001);

        // Vérification des parents (expected = parent attendu)
        assertNull(resultats.getParent("A"));      // départ, pas de parent
        assertEquals("A", resultats.getParent("B"));
        assertEquals("E", resultats.getParent("D"));
        assertEquals("D", resultats.getParent("C"));
        assertEquals("B", resultats.getParent("E"));
    }
}
