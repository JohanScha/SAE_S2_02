import java.io.*;
import java.util.*;

public class LireReseau {

    public static GrapheListe lire(String fichier) throws IOException {
        GrapheListe graphe = new GrapheListe();

        // On suppose qu'il n'y aura pas plus de 1000 stations
        List<String> nomsStations = new ArrayList<>(Collections.nCopies(1000, null));

        BufferedReader br = new BufferedReader(new FileReader(fichier));
        String ligne=br.readLine();
        boolean lectureConnexions = false;

        while (ligne != null) {
            ligne = ligne.trim();
            if (ligne.startsWith("%")) {
                if (ligne.toLowerCase().contains("connexions")) {
                    lectureConnexions = true;
                }
                continue;
            }

            if (!lectureConnexions) {
                // Format : id:nom:x:y:...
                String[] parts = ligne.split(":");
                if (parts.length >= 2) {
                    int id = Integer.parseInt(parts[0]);
                    nomsStations.set(id, parts[1]); // on met le nom Ã  l'indice correspondant
                }
            } else {
                // Format : id1:id2:temps:ligne
                String[] parts = ligne.split(":");
                if (parts.length >= 4) {
                    int id1 = Integer.parseInt(parts[0]);
                    int id2 = Integer.parseInt(parts[1]);
                    double cout = Double.parseDouble(parts[2]);
                    String ligneMetro = parts[3];

                    String nom1 = nomsStations.get(id1);
                    String nom2 = nomsStations.get(id2);

                    if (nom1 != null && nom2 != null) {
                        graphe.ajouterArc(nom1, new Arc(nom2, cout, ligneMetro));
                        graphe.ajouterArc(nom2, new Arc(nom1, cout, ligneMetro));
                    }
                }
            }
        }

        br.close();
        return graphe;
    }
}
