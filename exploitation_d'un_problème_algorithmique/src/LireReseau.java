import java.io.*;

public class LireReseau {

    public static GrapheListe lire(String fichier) throws IOException {
        GrapheListe graphe = new GrapheListe();
        String[] ids = new String[100000];  // tableau pour stocker temporairement les noms
        String ligne;
        BufferedReader lecteur = new BufferedReader(new FileReader(fichier));
        boolean lireStations = false;
        boolean lireConnexions = false;

        while ((ligne = lecteur.readLine()) != null) {
            ligne = ligne.trim();

            if (ligne.startsWith("%")) {
                if (ligne.toLowerCase().contains("stations")) {
                    lireStations = true;
                    lireConnexions = false;
                } else if (ligne.toLowerCase().contains("connexions")) {
                    lireStations = false;
                    lireConnexions = true;
                }
                continue;
            }

            if (lireStations && !ligne.isEmpty()) {
                String[] parts = ligne.split(":");
                if (parts.length >= 2) {
                    int id = Integer.parseInt(parts[0]);
                    String nom = parts[1];
                    if (id >= 0 && id < ids.length) {
                        ids[id] = nom;
                    }
                }
            }

            if (lireConnexions && !ligne.isEmpty()) {
                String[] parts = ligne.split(":");
                if (parts.length == 4) {
                    int id1 = Integer.parseInt(parts[0]);
                    int id2 = Integer.parseInt(parts[1]);
                    double cout = Double.parseDouble(parts[2]);
                    String ligneMetro = parts[3];

                    String nom1 = ids[id1];
                    String nom2 = ids[id2];

                    if (nom1 != null && nom2 != null) {
                        graphe.ajouterArc(nom1, new Arc(nom2, cout, ligneMetro));
                        graphe.ajouterArc(nom2, new Arc(nom1, cout, ligneMetro));
                    }
                }
            }
        }

        lecteur.close();
        return graphe;
    }
}
