Fonction pointFixe(Graphe G, Nœud depart)
	Debut
		N <- liste(Nœud)
		p <- tete(N)
		Pour i de 1 a finListe(N, p) faire
			X <- N[i]
			L(X) <- +∞
			parent(X) <- null
			p <- suc (N, p)
		finPour
		
		L(depart) <- 0
		modif <- vrai
		Tant que modif = vrai faire
			modif <- faux
			Pour i de 1 a finListe(N, p) faire
				X <- N[i]
				p <- suc (N, p)
				Pour j de 1 a taille(Voisin(X)) faire
					arc <- Voisin (X) [j]
					dest <- arc.destination
					cout <- arc.cout
					si L(X) + coût < L(dest) alors
               					L(dest) ← L(X) + coût
                				parent(dest) ← X
               					modif ← vrai
           				fin si
        			fin pour
    			fin pour
		fin tant que
	Fin
Lexique
G : Graphe, le graphe ou on veut trouver le point fixe

N : Liste(Nœud), la liste des nœuds du graphe

L(X) : reel, distance minimale depuis le départ jusqu’au nœud X

parent(X) : Nœud, le nœud précédent sur le plus court chemin vers X

voisins(X) : Liste(Arc), liste des arcs partant de X (chaque arc est un couple destination + coût)

départ : Nœud, nœud de départ		